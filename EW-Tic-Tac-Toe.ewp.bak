$version 11.00

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,36,240,76>
unit Core
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,76,240,116>
unit Resources
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,116,240,156>
unit Graphics
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,156,240,196>
unit Effects
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,196,240,236>
unit Views
{
  attr Directory = $Mosaic;
}

// This unit is intended to contain the application class and other GUI components.
$rect <300,40,500,80>
unit Game
{
  attr Directory = .\;
}

// The 'default' Language. Each project has to contain at least one language brick \
// called 'Default'
$rect <550,40,750,80>
language Default;

// Mosaic Framework
note group Note1
{
  attr Bounds = <20,-14,260,330>;
}

// Profile Configuration
note group Note2
{
  attr Bounds = <800,380,1040,490>;
}

// Languages
note group Note3
{
  attr Bounds = <530,-10,770,100>;
}

// To do:
// 
// - Select the profile brick and choose the desired color format of your GUI application \
// within the attribute 'PlatformPackage' (e.g. STM.STM32.RGBA8888, STM.STM32.RGB565, \
// ...)
// 
// - Select the profile brick and set the attribute 'OutputDirectory' to the desired \
// destination folder for the generated code (e.g. within your Build Environment \
// '\Application\GeneratedCode').
// 
// - Open the unit 'Application'. You will find there the application component (the \
// root component of your GUI). Implement there your desired GUI look and feel.
// 
// - To better structure your project you can add more units here. Use for this purpose \
// the template 'Unit' from the Gallery folder 'Chora'. Afterwards you can open the \
// unit and put there your own GUI components.
// 
// - If you plan to develop a multilingual GUI application, you can add more language \
// members to the project. Use for this purpose the template 'Language' found in \
// the Gallery folder 'Chora'.
note legend Note4
{
  attr Bounds = <770,-10,1510,290>;
}

// Project Units
note group Note5
{
  attr Bounds = <279,-10,519,330>;
}

// Welcome to Embedded Wizard!
// 
// This empty project is prepared to create a GUI application suitable for a STM32F429 \
// Discovery board with a display size of 240x320 pixel (portrait mode).
// 
// In order to get your first Embedded Wizard generated UI application up and running \
// on your STM32 target, we highly recommend to study the following document:
// 
// https://doc.embedded-wizard.de/getting-started-stm32f429-discovery
note legend Note
{
  attr Bounds = <19,339,759,539>;
}

// This is a profile member for the project. This profile controls the code generation \
// for the target system.
$rect <820,430,1020,470>
profile STM32F429 : STM.STM32.RGB565
{
  attr ScreenOrientation = Normal;
  attr ScreenSize = <240,320>;
  attr Optimization = High;
  attr ApplicationClass = Application::Application;
  attr ModeOfBitmapResources = Compressed;
  attr ModeOfStringConstants = Compressed;
  attr CleanOutputDirectories = true;
  attr FontConversion = Windows;
  attr OutputFileNameExtension = c;
  attr Verbose = false;
  attr PostProcess = ..\..\Application\Project\STM32CubeIDE\STM32F429-Discovery\STM32CubeIDE_ew_post_process.cmd;
  attr OutputDirectory = ..\..\Application\GeneratedCode;

  $rect <10,10,154,50>
  macro Author = "Dipl. Ing. Paul Banach and Dipl. Ing. Manfred Schweyer, Copyright (C) TARA Systems GmbH";
}

$rect <40,236,240,276>
unit WidgetSet
{
  attr Directory = $Mosaic\;
}

$rect <40,276,240,316>
unit Templates
{
  attr Directory = $Mosaic\;
}

$rect <300,90,500,130>
unit Application
{
  attr Directory = .\;
}
